apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodejs.fullname" . }}
  labels:
    {{- include "nodejs.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "nodejs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/application-secrets: "{{ .Values.secretChecksum }}"
        checksum/application-file-secrets: "{{ .Values.secretFileChecksum }}"
        {{- with .Values.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nodejs.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nodejs.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.secretName }}
          envFrom:
            - secretRef:
                name: {{ .Values.secretName }}
          {{- end }}
          {{- if and (.Values.secretMountPath) (.Values.secretFileName) }}
          volumeMounts:
            - name: env
              mountPath: {{ .Values.secretMountPath }}
              readOnly: true
              subPath: .env
          {{- end }}
          resources:
      {{- toYaml .Values.resources | nindent 12 }}
      {{- if and (.Values.secretMountPath) (.Values.secretFileName) }}
      volumes:
        - name: env
          secret:
            secretName: {{ .Values.secretFileName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}